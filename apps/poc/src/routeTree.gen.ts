/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as IndexImport } from './pages/index'
import { Route as assearchSearchResultsImport } from './pages/(as)/(search)/search.results'

// Create Virtual Routes

const pdtDigitalLazyImport = createFileRoute('/(pdt)/digital')()
const cesProfilesLazyImport = createFileRoute('/(ces)/profiles')()
const cesProfilesGraphLazyImport = createFileRoute('/(ces)/profiles/graph')()
const asworkspacesWorkspacesLazyImport = createFileRoute(
  '/(as)/(workspaces)/workspaces',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const pdtDigitalLazyRoute = pdtDigitalLazyImport
  .update({
    path: '/digital',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./pages/(pdt)/digital.lazy').then((d) => d.Route))

const cesProfilesLazyRoute = cesProfilesLazyImport
  .update({
    path: '/profiles',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./pages/(ces)/profiles.lazy').then((d) => d.Route))

const cesProfilesGraphLazyRoute = cesProfilesGraphLazyImport
  .update({
    path: '/profiles/graph',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./pages/(ces)/profiles_.graph.lazy').then((d) => d.Route))

const asworkspacesWorkspacesLazyRoute = asworkspacesWorkspacesLazyImport
  .update({
    path: '/workspaces',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./pages/(as)/(workspaces)/workspaces.lazy').then((d) => d.Route),
  )

const assearchSearchResultsRoute = assearchSearchResultsImport.update({
  path: '/search/results',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(ces)/profiles': {
      preLoaderRoute: typeof cesProfilesLazyImport
      parentRoute: typeof rootRoute
    }
    '/(pdt)/digital': {
      preLoaderRoute: typeof pdtDigitalLazyImport
      parentRoute: typeof rootRoute
    }
    '/(as)/(workspaces)/workspaces': {
      preLoaderRoute: typeof asworkspacesWorkspacesLazyImport
      parentRoute: typeof rootRoute
    }
    '/(ces)/profiles/graph': {
      preLoaderRoute: typeof cesProfilesGraphLazyImport
      parentRoute: typeof rootRoute
    }
    '/(as)/(search)/search/results': {
      preLoaderRoute: typeof assearchSearchResultsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  cesProfilesLazyRoute,
  pdtDigitalLazyRoute,
  asworkspacesWorkspacesLazyRoute,
  cesProfilesGraphLazyRoute,
  assearchSearchResultsRoute,
])

/* prettier-ignore-end */
